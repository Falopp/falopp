name: Refresh graph hourly
on:
  schedule: [{ cron: "0 * * * *" }] # cada hora (UTC)
  workflow_dispatch:
permissions:
  contents: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Determine README path
        id: readme
        shell: bash
        run: |
          set -euo pipefail
          file=""
          for cand in README.md README.MD Readme.md; do
            if [[ -f "$cand" ]]; then file="$cand"; break; fi
          done
          if [[ -z "$file" ]]; then
            echo "README no encontrado"; exit 1
          fi
          echo "file=$file" >> "$GITHUB_OUTPUT"

      - name: Bump cache-busting param safely
        shell: bash
        env:
          FILE: ${{ steps.readme.outputs.file }}
        run: |
          set -euo pipefail
          ts=$(date +%s)
          tmp="${FILE}.tmp"

          # Solo tocar líneas con el activity graph
          awk -v ts="$ts" '
            /github-readme-activity-graph\.vercel\.app\/graph/ {
              if ($0 ~ /[?&]v=[^"& )]+/) {
                gsub(/([?&]v=)[^"& )]+/, "\\1" ts)
              } else {
                sub(/(github-readme-activity-graph\.vercel\.app\/graph[^\"& )]*)/, "&?v=" ts)
              }
            }
            { print }
          ' "$FILE" > "$tmp"

          mv "$tmp" "$FILE"

          # Guardarraíl: si se fue de tamaño, revertir y no commitear
          size=$(wc -c < "$FILE")
          if (( size > 1000000 )); then
            echo "README creció a $size bytes; abortando para evitar >100MB"
            git checkout -- "$FILE"
            # salir con éxito para no romper el workflow, pero sin commit
            exit 0
          fi

      - name: Commit only README
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Refresh activity graph cache"
          file_pattern: ${{ steps.readme.outputs.file }}
